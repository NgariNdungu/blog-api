openapi: 3.0.0

info:
  title: Blog API
  version: 0.0.1
  
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
            example: ['user1','user2','user3','user4']
    post:
      summary: Creates a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            examples:
              username:
                summary: Preferred username that will be associated with the a blog.
                value:
                  name: pakapaka
              password:
                summary: Preferred password
                value:
                  name: myverystrongpassword
      responses:
        '201':
          description: Created
        '400':
          description: Invalid registration credentials
  /login:
    post:
      summary: Authenticates a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
        '404':
          description: User does not exist
        '400':
          description: Wrong password
          
  /login/blogs:
    get:
      summary: Gets a list of all blogs
      responses:
        '200':
          description: A list of hashes containing the blog id as the key and the title as the value
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
              example:
                id: 1
                title: first_blog
                id: 2
                title: second_blog
    post:
      summary: Creates a new blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
            type: object
            properties:
              title:
                type: string
              body:
                type: string
      responses:
        '201':
          description: Created
      
                
  /login/blogs/{blogId}:
    get:
      summary: Returns a single blog by ID
      parameters:
        name: blogId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      responses:
        '200':
          description: Blog object
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    blog:
                      type: object
                      properties:
                        title:
                          type: string
                        body:
                          type: string
        '404':
          description: Not found
    put:
      summary: Updates an exixting post
      parameters:
        name: blogId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
            type: object
            properties:
              new_title:
                type: string
              new_body:
                type: string
      responses:
        '200':
          description: Updated
        '404':
          description: Not found
        '400':
          description: Invalid input